# reorder x-axis
df1$model <- factor(df1$model, levels = model_names)
# save plot in object
plot1_x_ticks = c("1" = "", "2" = "", "3" = "", "4" = "",
"5" = "", "6" = "", "7" = "", "8" = "",
"9" = "", "10"="","11"="", "12"="",
"13"="", "14" ="", "15"="", "16"="",
"17"="", "18"="", "19"="", "20"="",
"21"="")
delta_waic_plot(df = df1, my_colors = rnn_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot1_x_ticks, my_title = 'RNN')
# create df
df2 = data.frame(delta_waic = as.vector(human_waic_delta),
type = rep('Human', length(as.vector(human_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(human_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(human_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df2$model <- factor(df1$model, levels = model_names)
# create color
human_colors <- c("black","#808080")
plot2_x_ticks <- c(
"1" = "SM", "2" = "SM+P",
"3" = "SM+BP", "4" = "SM+TP",
"5" = "SM+B", "6" = "SM+T",
"7" = "SM+DP", "8" = "SM+BDP",
"9" = "SM+DPT", "10"="SM",
"11"="SM+E", "12"="SM+T",
"13"="SM+B", "14" ="SM+P",
"15"="SM+EP", "16" ="SM+TP",
"17"="SM+BP", "18" ="SM+DP",
"19"="SM+BDP", "20" ="SM+TDP",
"21"="SM+EDP"
)
delta_waic_plot(df = df2, my_colors = human_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot2_x_ticks, my_title = 'Human')
# arguments:
delta_waic_plot <- function(df, my_colors, my_ylab, my_x_ticks, my_title){
p <- ggplot(df,aes(x = model, y = delta_waic, fill = lr, group = lr)) +
geom_col(alpha = 0.4, position = position_dodge(width = 10)) +
theme_bw() +
scale_fill_manual(values=my_colors) +
scale_colour_manual(values=my_colors)+
theme(legend.position = c(0.9, 0.8),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_blank(),
axis.title.x=element_blank(),
axis.text.x =element_text(size=12, face="bold"),
axis.title.y = element_text(size=12, face="bold")) +
ylab(my_ylab) +
scale_x_discrete(labels = my_x_ticks) +
ggtitle(my_title)
return(p)
}
# create color
rnn_colors <- c("blue","#ADD8E6")
# create df
df1 = data.frame(delta_waic = as.vector(rnn_waic_delta),
type = rep('RNN', length(as.vector(rnn_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(rnn_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(rnn_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df1$model <- factor(df1$model, levels = model_names)
# save plot in object
plot1_x_ticks = c("1" = "", "2" = "", "3" = "", "4" = "",
"5" = "", "6" = "", "7" = "", "8" = "",
"9" = "", "10"="","11"="", "12"="",
"13"="", "14" ="", "15"="", "16"="",
"17"="", "18"="", "19"="", "20"="",
"21"="")
delta_waic_plot(df = df1, my_colors = rnn_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot1_x_ticks, my_title = 'RNN')
# create df
df2 = data.frame(delta_waic = as.vector(human_waic_delta),
type = rep('Human', length(as.vector(human_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(human_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(human_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df2$model <- factor(df1$model, levels = model_names)
# create color
human_colors <- c("black","#808080")
plot2_x_ticks <- c(
"1" = "SM", "2" = "SM+P",
"3" = "SM+BP", "4" = "SM+TP",
"5" = "SM+B", "6" = "SM+T",
"7" = "SM+DP", "8" = "SM+BDP",
"9" = "SM+DPT", "10"="SM",
"11"="SM+E", "12"="SM+T",
"13"="SM+B", "14" ="SM+P",
"15"="SM+EP", "16" ="SM+TP",
"17"="SM+BP", "18" ="SM+DP",
"19"="SM+BDP", "20" ="SM+TDP",
"21"="SM+EDP"
)
delta_waic_plot(df = df2, my_colors = human_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot2_x_ticks, my_title = 'Human')
p1 <- delta_waic_plot(df = df1, my_colors = rnn_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot1_x_ticks, my_title = 'RNN')
# create df
df2 = data.frame(delta_waic = as.vector(human_waic_delta),
type = rep('Human', length(as.vector(human_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(human_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(human_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df2$model <- factor(df1$model, levels = model_names)
# create color
human_colors <- c("black","#808080")
plot2_x_ticks <- c(
"1" = "SM", "2" = "SM+P",
"3" = "SM+BP", "4" = "SM+TP",
"5" = "SM+B", "6" = "SM+T",
"7" = "SM+DP", "8" = "SM+BDP",
"9" = "SM+DPT", "10"="SM",
"11"="SM+E", "12"="SM+T",
"13"="SM+B", "14" ="SM+P",
"15"="SM+EP", "16" ="SM+TP",
"17"="SM+BP", "18" ="SM+DP",
"19"="SM+BDP", "20" ="SM+TDP",
"21"="SM+EDP"
)
p2 <- delta_waic_plot(df = df2, my_colors = human_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot2_x_ticks, my_title = 'Human')
# two plots in one
p3 = ggarrange(p1, p2, nrow = 2, ncol = 1)
ggsave('plots/model_comparison_dp.png', dpi = 600,  width = 10, height = 6)
# arguments:
delta_waic_plot <- function(df, my_colors, my_ylab, my_x_ticks, my_title){
p <- ggplot(df,aes(x = model, y = delta_waic, fill = lr, group = lr)) +
geom_col(alpha = 0.4, position = position_dodge(width = 10)) +
theme_bw() +
scale_fill_manual(values=my_colors) +
scale_colour_manual(values=my_colors)+
theme(legend.position = c(0.9, 0.8),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_blank(),
axis.title.x=element_blank(),
axis.text.x =element_text(size=9, face="bold"),
axis.title.y = element_text(size=9, face="bold")) +
ylab(my_ylab) +
scale_x_discrete(labels = my_x_ticks) +
ggtitle(my_title)
return(p)
}
### RNN
# create color
rnn_colors <- c("blue","#ADD8E6")
# create df
df1 = data.frame(delta_waic = as.vector(rnn_waic_delta),
type = rep('RNN', length(as.vector(rnn_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(rnn_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(rnn_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df1$model <- factor(df1$model, levels = model_names)
# save plot in object
plot1_x_ticks = c("1" = "", "2" = "", "3" = "", "4" = "",
"5" = "", "6" = "", "7" = "", "8" = "",
"9" = "", "10"="","11"="", "12"="",
"13"="", "14" ="", "15"="", "16"="",
"17"="", "18"="", "19"="", "20"="",
"21"="")
p1 <- delta_waic_plot(df = df1, my_colors = rnn_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot1_x_ticks, my_title = 'RNN')
### human
# create df
df2 = data.frame(delta_waic = as.vector(human_waic_delta),
type = rep('Human', length(as.vector(human_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(human_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(human_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df2$model <- factor(df1$model, levels = model_names)
# create color
human_colors <- c("black","#808080")
plot2_x_ticks <- c(
"1" = "SM", "2" = "SM+P",
"3" = "SM+BP", "4" = "SM+TP",
"5" = "SM+B", "6" = "SM+T",
"7" = "SM+DP", "8" = "SM+BDP",
"9" = "SM+DPT", "10"="SM",
"11"="SM+E", "12"="SM+T",
"13"="SM+B", "14" ="SM+P",
"15"="SM+EP", "16" ="SM+TP",
"17"="SM+BP", "18" ="SM+DP",
"19"="SM+BDP", "20" ="SM+TDP",
"21"="SM+EDP"
)
p2 <- delta_waic_plot(df = df2, my_colors = human_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot2_x_ticks, my_title = 'Human')
# two plots in one
p3 = ggarrange(p1, p2, nrow = 2, ncol = 1)
ggsave('plots/model_comparison_dp.png', dpi = 600,  width = 10, height = 6)
#ggsave('plots/model_comparison.png', width = 20, height = 15, units = "in")
# model_names1 = c("SM","SM+P","SM+BP", "SM+TP", "SM+B", "SM+T",
#                                   "SM_KM", "SM+E", "SM+T", "SM+B", "SM+P", "SM+EP", "SM+TP", "SM+BP")
#
#
# # check stats
# df1$model = model_names1
# print('RNN')
# print(df1)
#
# df2$model = model_names1
# print('Human')
# print(df2)
# arguments:
delta_waic_plot <- function(df, my_colors, my_ylab, my_x_ticks, my_title){
p <- ggplot(df,aes(x = model, y = delta_waic, fill = lr, group = lr)) +
geom_col(alpha = 0.4, position = position_dodge(width = 10)) +
theme_bw() +
scale_fill_manual(values=my_colors) +
scale_colour_manual(values=my_colors)+
theme(legend.position = c(0.9, 0.8),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_blank(),
axis.title.x=element_blank(),
axis.text.x =element_text(size=8, face="bold"),
axis.title.y = element_text(size=8, face="bold")) +
ylab(my_ylab) +
scale_x_discrete(labels = my_x_ticks) +
ggtitle(my_title)
return(p)
}
# create color
rnn_colors <- c("blue","#ADD8E6")
# create df
df1 = data.frame(delta_waic = as.vector(rnn_waic_delta),
type = rep('RNN', length(as.vector(rnn_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(rnn_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(rnn_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df1$model <- factor(df1$model, levels = model_names)
# save plot in object
plot1_x_ticks = c("1" = "", "2" = "", "3" = "", "4" = "",
"5" = "", "6" = "", "7" = "", "8" = "",
"9" = "", "10"="","11"="", "12"="",
"13"="", "14" ="", "15"="", "16"="",
"17"="", "18"="", "19"="", "20"="",
"21"="")
p1 <- delta_waic_plot(df = df1, my_colors = rnn_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot1_x_ticks, my_title = 'RNN')
# create df
df2 = data.frame(delta_waic = as.vector(human_waic_delta),
type = rep('Human', length(as.vector(human_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(human_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(human_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df2$model <- factor(df1$model, levels = model_names)
# create color
human_colors <- c("black","#808080")
plot2_x_ticks <- c(
"1" = "SM", "2" = "SM+P",
"3" = "SM+BP", "4" = "SM+TP",
"5" = "SM+B", "6" = "SM+T",
"7" = "SM+DP", "8" = "SM+BDP",
"9" = "SM+DPT", "10"="SM",
"11"="SM+E", "12"="SM+T",
"13"="SM+B", "14" ="SM+P",
"15"="SM+EP", "16" ="SM+TP",
"17"="SM+BP", "18" ="SM+DP",
"19"="SM+BDP", "20" ="SM+TDP",
"21"="SM+EDP"
)
p2 <- delta_waic_plot(df = df2, my_colors = human_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot2_x_ticks, my_title = 'Human')
# two plots in one
p3 = ggarrange(p1, p2, nrow = 2, ncol = 1)
ggsave('plots/model_comparison_dp.png', dpi = 600,  width = 10, height = 6)
# arguments:
delta_waic_plot <- function(df, my_colors, my_ylab, my_x_ticks, my_title){
p <- ggplot(df,aes(x = model, y = delta_waic, fill = lr, group = lr)) +
geom_col(alpha = 0.4, position = position_dodge(width = 15)) +
theme_bw() +
scale_fill_manual(values=my_colors) +
scale_colour_manual(values=my_colors)+
theme(legend.position = c(0.9, 0.8),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_blank(),
axis.title.x=element_blank(),
axis.text.x =element_text(size=8, face="bold"),
axis.title.y = element_text(size=8, face="bold")) +
ylab(my_ylab) +
scale_x_discrete(labels = my_x_ticks) +
ggtitle(my_title)
return(p)
}
# create color
rnn_colors <- c("blue","#ADD8E6")
# create df
df1 = data.frame(delta_waic = as.vector(rnn_waic_delta),
type = rep('RNN', length(as.vector(rnn_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(rnn_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(rnn_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df1$model <- factor(df1$model, levels = model_names)
# save plot in object
plot1_x_ticks = c("1" = "", "2" = "", "3" = "", "4" = "",
"5" = "", "6" = "", "7" = "", "8" = "",
"9" = "", "10"="","11"="", "12"="",
"13"="", "14" ="", "15"="", "16"="",
"17"="", "18"="", "19"="", "20"="",
"21"="")
p1 <- delta_waic_plot(df = df1, my_colors = rnn_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot1_x_ticks, my_title = 'RNN')
# create df
df2 = data.frame(delta_waic = as.vector(human_waic_delta),
type = rep('Human', length(as.vector(human_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(human_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(human_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df2$model <- factor(df1$model, levels = model_names)
# create color
human_colors <- c("black","#808080")
plot2_x_ticks <- c(
"1" = "SM", "2" = "SM+P",
"3" = "SM+BP", "4" = "SM+TP",
"5" = "SM+B", "6" = "SM+T",
"7" = "SM+DP", "8" = "SM+BDP",
"9" = "SM+DPT", "10"="SM",
"11"="SM+E", "12"="SM+T",
"13"="SM+B", "14" ="SM+P",
"15"="SM+EP", "16" ="SM+TP",
"17"="SM+BP", "18" ="SM+DP",
"19"="SM+BDP", "20" ="SM+TDP",
"21"="SM+EDP"
)
p2 <- delta_waic_plot(df = df2, my_colors = human_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot2_x_ticks, my_title = 'Human')
# two plots in one
p3 = ggarrange(p1, p2, nrow = 2, ncol = 1)
ggsave('plots/model_comparison_dp.png', dpi = 600,  width = 10, height = 6)
# arguments:
delta_waic_plot <- function(df, my_colors, my_ylab, my_x_ticks, my_title){
p <- ggplot(df,aes(x = model, y = delta_waic, fill = lr, group = lr)) +
geom_col(alpha = 0.4, position = position_dodge(width = 100)) +
theme_bw() +
scale_fill_manual(values=my_colors) +
scale_colour_manual(values=my_colors)+
theme(legend.position = c(0.9, 0.8),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_blank(),
axis.title.x=element_blank(),
axis.text.x =element_text(size=8, face="bold"),
axis.title.y = element_text(size=8, face="bold")) +
ylab(my_ylab) +
scale_x_discrete(labels = my_x_ticks) +
ggtitle(my_title)
return(p)
}
### RNN
# create color
rnn_colors <- c("blue","#ADD8E6")
# create df
df1 = data.frame(delta_waic = as.vector(rnn_waic_delta),
type = rep('RNN', length(as.vector(rnn_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(rnn_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(rnn_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df1$model <- factor(df1$model, levels = model_names)
# save plot in object
plot1_x_ticks = c("1" = "", "2" = "", "3" = "", "4" = "",
"5" = "", "6" = "", "7" = "", "8" = "",
"9" = "", "10"="","11"="", "12"="",
"13"="", "14" ="", "15"="", "16"="",
"17"="", "18"="", "19"="", "20"="",
"21"="")
p1 <- delta_waic_plot(df = df1, my_colors = rnn_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot1_x_ticks, my_title = 'RNN')
### human
# create df
df2 = data.frame(delta_waic = as.vector(human_waic_delta),
type = rep('Human', length(as.vector(human_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(human_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(human_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df2$model <- factor(df1$model, levels = model_names)
# create color
human_colors <- c("black","#808080")
plot2_x_ticks <- c(
"1" = "SM", "2" = "SM+P",
"3" = "SM+BP", "4" = "SM+TP",
"5" = "SM+B", "6" = "SM+T",
"7" = "SM+DP", "8" = "SM+BDP",
"9" = "SM+DPT", "10"="SM",
"11"="SM+E", "12"="SM+T",
"13"="SM+B", "14" ="SM+P",
"15"="SM+EP", "16" ="SM+TP",
"17"="SM+BP", "18" ="SM+DP",
"19"="SM+BDP", "20" ="SM+TDP",
"21"="SM+EDP"
)
p2 <- delta_waic_plot(df = df2, my_colors = human_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot2_x_ticks, my_title = 'Human')
# two plots in one
p3 = ggarrange(p1, p2, nrow = 2, ncol = 1)
ggsave('plots/model_comparison_dp.png', dpi = 600,  width = 10, height = 6)
#ggsave('plots/model_comparison.png', width = 20, height = 15, units = "in")
# model_names1 = c("SM","SM+P","SM+BP", "SM+TP", "SM+B", "SM+T",
#                                   "SM_KM", "SM+E", "SM+T", "SM+B", "SM+P", "SM+EP", "SM+TP", "SM+BP")
#
#
# # check stats
# df1$model = model_names1
# print('RNN')
# print(df1)
#
# df2$model = model_names1
# print('Human')
# print(df2)
# function for plotting
delta_waic_plot <- function(df, my_colors, my_ylab, my_x_ticks, my_title){
p <- ggplot(df,aes(x = model, y = delta_waic, fill = lr, group = lr)) +
geom_col(alpha = 0.4, position = position_dodge(width = 10)) +
theme_bw() +
scale_fill_manual(values=my_colors) +
scale_colour_manual(values=my_colors)+
theme(legend.position = c(0.9, 0.8),
plot.title = element_text(hjust = 0.5, face = "bold"),
legend.title = element_blank(),
axis.title.x=element_blank(),
axis.text.x =element_text(size=7, face="bold"),
axis.title.y = element_text(size=8, face="bold")) +
ylab(my_ylab) +
scale_x_discrete(labels = my_x_ticks) +
ggtitle(my_title)
return(p)
}
### RNN
# create color
rnn_colors <- c("blue","#ADD8E6")
# create df
df1 = data.frame(delta_waic = as.vector(rnn_waic_delta),
type = rep('RNN', length(as.vector(rnn_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(rnn_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(rnn_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df1$model <- factor(df1$model, levels = model_names)
# save plot in object
plot1_x_ticks = c("1" = "", "2" = "", "3" = "", "4" = "",
"5" = "", "6" = "", "7" = "", "8" = "",
"9" = "", "10"="","11"="", "12"="",
"13"="", "14" ="", "15"="", "16"="",
"17"="", "18"="", "19"="", "20"="",
"21"="")
p1 <- delta_waic_plot(df = df1, my_colors = rnn_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot1_x_ticks, my_title = 'RNN')
### human
# create df
df2 = data.frame(delta_waic = as.vector(human_waic_delta),
type = rep('Human', length(as.vector(human_waic_delta))),
lr = c(rep('Delta-Rule', length(as.vector(human_waic_delta[c(1:9)]))),
rep('Bayesian-Learner', length(as.vector(human_waic_delta[c(10:21)])))),
model = model_names
)
# reorder x-axis
df2$model <- factor(df1$model, levels = model_names)
# create color
human_colors <- c("black","#808080")
plot2_x_ticks <- c(
"1" = "SM", "2" = "SM+P",
"3" = "SM+BP", "4" = "SM+TP",
"5" = "SM+B", "6" = "SM+T",
"7" = "SM+DP", "8" = "SM+BDP",
"9" = "SM+DPT", "10"="SM",
"11"="SM+E", "12"="SM+T",
"13"="SM+B", "14" ="SM+P",
"15"="SM+EP", "16" ="SM+TP",
"17"="SM+BP", "18" ="SM+DP",
"19"="SM+BDP", "20" ="SM+TDP",
"21"="SM+EDP"
)
p2 <- delta_waic_plot(df = df2, my_colors = human_colors, my_ylab = "Delta WAIC",
my_x_ticks = plot2_x_ticks, my_title = 'Human')
# two plots in one
p3 = ggarrange(p1, p2, nrow = 2, ncol = 1)
ggsave('plots/model_comparison_dp.png', dpi = 600,  width = 10, height = 6)
#ggsave('plots/model_comparison.png', width = 20, height = 15, units = "in")
# model_names1 = c("SM","SM+P","SM+BP", "SM+TP", "SM+B", "SM+T",
#                                   "SM_KM", "SM+E", "SM+T", "SM+B", "SM+P", "SM+EP", "SM+TP", "SM+BP")
#
#
# # check stats
# df1$model = model_names1
# print('RNN')
# print(df1)
#
# df2$model = model_names1
# print('Human')
# print(df2)
