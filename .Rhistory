a = c(1,2,3)
b = c(4,5)
sqrt(sum(a^2))
sqrt(sum(a^2)/length(a))
sum(a^2)/length(a)
sqrt(sum(a^2/length(a)))
sqrt(sum(b^2/length(b)))
mse
c(a,b)
c= c(a,b)
sqrt(sum(c^2/length(c)))
load("C:/Users/Deniz/Documents/UOC/PhD Peters/rnn_projects/p1_generalization/data/intermediate_data/modeling/modeling_fits/stan_fit_m_2_d_NA_t_2021_11_23_14_52_31.RData")
View(stanfit)
View(stanfit)
# use all cores
options(mc.cores = parallel::detectCores())
parallel::detectCores()
get_waic <- function(path_to_fit = 'data/intermediate_data/modeling/modeling_fits', stanfit_file){
# use all cores
options(mc.cores = parallel::detectCores())
# set working dir to dir where R-file resides
setwd(file.path(dirname(rstudioapi::getSourceEditorContext()$path)))
# move up in directory
setwd('../')
# load stanfit files
setwd(PATH_TO_FIT)
load(STANFIT_FILE)
# get log-likelihood as matrix (dimensions: n_samples X n_datapoints)
ll = as.matrix(df[,startsWith(names(df), 'log_lik')])
# calculate waic
waic(ll)
}
get_waic <- function(path_to_fit = 'data/intermediate_data/modeling/modeling_fits', stanfit_file){
# use all cores
options(mc.cores = parallel::detectCores())
# set working dir to dir where R-file resides
setwd(file.path(dirname(rstudioapi::getSourceEditorContext()$path)))
# move up in directory
setwd('../')
# load stanfit files
setwd(path_to_fit)
load(stanfit_file)
# get log-likelihood as matrix (dimensions: n_samples X n_datapoints)
ll = as.matrix(df[,startsWith(names(df), 'log_lik')])
# calculate waic
waic(ll)
}
debugonce(get_waic)
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
# set working dir to dir where R-file resides
setwd(file.path(dirname(rstudioapi::getSourceEditorContext()$path)))
library('loo')
get_waic <- function(path_to_fit = 'data/intermediate_data/modeling/modeling_fits', stanfit_file){
# use all cores
options(mc.cores = parallel::detectCores())
# move up in directory
setwd('../')
# load stanfit files
setwd(path_to_fit)
load(stanfit_file)
# get log-likelihood as matrix (dimensions: n_samples X n_datapoints)
ll = as.matrix(df[,startsWith(names(df), 'log_lik')])
# calculate waic
waic(ll)
}
debugonce(get_waic)
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
debugonce(get_waic)
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
# move up in directory
setwd('../')
library('loo')
get_waic <- function(path_to_fit = 'data/intermediate_data/modeling/modeling_fits', stanfit_file){
# use all cores
options(mc.cores = parallel::detectCores())
# load stanfit files
setwd(path_to_fit)
load(stanfit_file)
# get log-likelihood as matrix (dimensions: n_samples X n_datapoints)
ll = as.matrix(df[,startsWith(names(df), 'log_lik')])
# calculate waic
return(waic(ll))
}
debugonce(get_waic)
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
function(path_to_fit = 'data/intermediate_data/modeling/modeling_fits', stanfit_file){
# use all cores
options(mc.cores = parallel::detectCores())
# load stanfit files
setwd(path_to_fit)
load(stanfit_file)
# get log-likelihood as matrix (dimensions: n_samples X n_datapoints)
ll = as.matrix(df[,startsWith(names(df), 'log_lik')])
# calculate waic
return(waic(ll))
}
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
setwd()
getwd()
# set working dir to dir where R-file resides
setwd(file.path(dirname(rstudioapi::getSourceEditorContext()$path)))
# move up in directory
setwd('../')
getwd()
get_waic <- function(path_to_fit = 'data/intermediate_data/modeling/modeling_fits', stanfit_file){
# use all cores
options(mc.cores = parallel::detectCores())
# load stanfit files
setwd(path_to_fit)
load(stanfit_file)
# get log-likelihood as matrix (dimensions: n_samples X n_datapoints)
ll = as.matrix(df[,startsWith(names(df), 'log_lik')])
# calculate waic
return(waic(ll))
}
debugonce(get_waic)
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
get_waic <- function(path_to_fit = 'data/intermediate_data/modeling/modeling_fits', stanfit_file){
# use all cores
options(mc.cores = parallel::detectCores())
# load stanfit files
load(file.path(path_to_fit, stanfit_file, fsep = .Platform$file.sep))
# get log-likelihood as matrix (dimensions: n_samples X n_datapoints)
ll = as.matrix(df[,startsWith(names(df), 'log_lik')])
# calculate waic
return(waic(ll))
}
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
debugonce(get_waic)
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
file_path()
file.path(path_to_fit, stanfit_file, fsep = .Platform$file.sep)
getwd()
setwd(file.path(dirname(rstudioapi::getSourceEditorContext()$path)))
# move up in directory
setwd('../')
get_waic <- function(path_to_fit = 'data/intermediate_data/modeling/modeling_fits', stanfit_file){
# use all cores
options(mc.cores = parallel::detectCores())
# load stanfit files
load(file.path(path_to_fit, stanfit_file, fsep = .Platform$file.sep))
# get log-likelihood as matrix (dimensions: n_samples X n_datapoints)
ll = as.matrix(df[,startsWith(names(df), 'log_lik')])
# calculate waic
return(waic(ll))
}
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
x = get_waic(stanfit_file = 'stan_fit_m_2_d_rnn_n_f_rt_continuous_train_sd_.05_id_9_test_sd_0_32.RData')
x$estimates
x$p_waic
x$waic
x$estimates['waic']
x$estimates
x$estimates[3,1]
