load("C:/Users/deniz/sciebo - Tuzsus, Deniz (dtuzsus1@uni-koeln.de)@uni-koeln.sciebo.de/Deniz/Lehre/Masterarbeiten/Henrike Flimm/rnn_data_nh_factors.Rdata")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(rstatix)
# RNN's mean accuracy (1 = option with the highest reward chosen, 0 = other option chosen)
rnn_data %>%
group_by(id) %>%
get_summary_stats(accuracy, type = "mean_sd")
rnn_data
colnames(rnn_data)
rnn_data %>%
group_by(id) %>%
get_summary_stats(accuracy, type = "mean_sd")
library(dplyr)
library(rstatix)
# RNN's mean accuracy (1 = option with the highest reward chosen, 0 = other option chosen)
rnn_data %>%
group_by(id) %>%
get_summary_stats(accuracy, type = "mean_sd")
# mean accuracy grouped by RNN and number of hidden units
rnn_data %>%
group_by(id, n_hidden) %>%
get_summary_stats(accuracy, type = "mean_sd")
# mean accuracy grouped by number of hidden units
rnn_data %>%
group_by(n_hidden) %>%
get_summary_stats(accuracy, type = "mean_sd")
# cumulative regret (sum of the difference between maximum return possible and obtained return across trials)
# obtained return (mean centered --> different means per task environment, n = 300 each)
rnn_data %>%
group_by(id, n_hidden) %>%
summarize(sum_reward = sum(reward), .groups = "drop")
# calculate not centered return
rnn_data <- rnn_data %>%
mutate(diff_cen = case_when(choice == 0 ~ (p_rew_1-reward), choice == 1 ~ (p_rew_2-reward), choice == 2 ~ (p_rew_3-reward), choice == 3 ~ (p_rew_4-reward)))
rnn_data$reward_notcen <- rnn_data$reward + rnn_data$diff_cen
# maximum return possible
# not mean centered
rnn_data$max_rew <- pmax(rnn_data$p_rew_1, rnn_data$p_rew_2, rnn_data$p_rew_3, rnn_data$p_rew_4)
rnn_data %>%
group_by(id, n_hidden) %>%
summarize(sum_reward_max = sum(max_rew), .groups = "drop") # Rmax = 618.5371
# result
rnn_data$rew_loss <- rnn_data$max_rew - rnn_data$reward_notcen
cum_regret <- rnn_data %>%
group_by(id, n_hidden) %>%
summarize(cum_regret = sum(rew_loss), .groups = "drop")
cum_regret
# switches
switch <- rnn_data %>%
group_by(id, n_hidden) %>%
summarize(num_switches = sum(is_switch), .groups = "drop")
switch$switch_perc <- (switch$num_switches/900) * 100
switch
# merge
rnn_behav <- merge(x = cum_regret, y = switch, by = c("id", "n_hidden"))
View(rnn_behav)
# merge
rnn_behav <- merge(x = cum_regret, y = switch, by = c("id", "n_hidden"))
View(rnn_behav)
# associations cumulative reget/switching
cor.test(rnn_behav$cum_regret, rnn_behav$switch_perc) # r = .19, p = .034
## more switching associated with worse overall performance
# associations cumulative regret/number of hidden units
cor.test(rnn_behav$cum_regret, rnn_behav$n_hidden) # r = .07, p = .46
## no linear association
# associations switching/number of hidden units
cor.test(rnn_behav$switch_perc, rnn_behav$n_hidden) # r = -.19, p = .038
## more switching associated with less hidden units
# associations accuracy/switching
cor.test(rnn_behav2$accuracy, rnn_behav2$switch_perc) # r = -.08, p = .36
# merge
rnn_behav <- merge(x = cum_regret, y = switch, by = c("id", "n_hidden"))
View(rnn_behav)
library(ggplot2)
library(gghalves)
library(gridExtra)
# n_hidden --> categorical variable
rnn_behav$n_hidden_c <- as.factor(rnn_behav$n_hidden)
# plots
# cumulative regret
p1 <- ggplot(data = rnn_behav, aes(x = n_hidden_c, y = cum_regret, fill = n_hidden_c))+
geom_point()+
geom_boxplot(alpha = .1, width = .3)+
geom_half_violin(side = "r", nudge = .2)+
scale_x_discrete(name = "Number of hidden units", labels = c(48, 64, 80, 96))+
scale_y_continuous(name = "Cumulative regret")+
theme(legend.position = "none")
p1
# switches
p2 <- ggplot(data = rnn_behav, aes(x = n_hidden_c, y = switch_perc, fill = n_hidden_c))+
geom_point()+
geom_boxplot(alpha = .1, width = .3)+
geom_half_violin(side = "r", nudge = .2)+
scale_x_discrete(name = "Number of hidden units", labels = c(48, 64, 80, 96))+
scale_y_continuous(name = "% switch trials")+
theme(legend.position = "none")
p2
grid.arrange(p1, p2, ncol = 2)
# accuracy
accuracy <- rnn_data %>%
group_by(id, n_hidden) %>%
summarize(accuracy = mean(accuracy), .groups = "drop")
rnn_behav2 <- merge(x = rnn_behav, y = accuracy, by = c("id", "n_hidden"))
p3 <- ggplot(data = rnn_behav2, aes(x = n_hidden_c, y = accuracy, fill = n_hidden_c))+
geom_point()+
geom_boxplot(alpha = .1, width = .3)+
geom_half_violin(side = "r", nudge = .2)+
scale_x_discrete(name = "Number of hidden units", labels = c(48, 64, 80, 96))+
scale_y_continuous(name = "Accuracy")+
theme(legend.position = "none")
p3
grid.arrange(p1, p3, ncol = 2)
library(tidyverse)
# trial index
rnn_data <- rnn_data %>% group_by(id, n_hidden) %>% mutate(trial = seq_len(n()))
# long df for plotting
rnn_rw <- rnn_data[, c("id", "n_hidden", "trial", "p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4", "choice", "is_switch")]
rnn_rw_long <- pivot_longer(data = rnn_rw, cols = c("p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4"), names_to = "bandit_rew")
# plot random walks
ggplot(data = rnn_rw_long, aes(x = trial, y = value, colour = bandit_rew))+
geom_line(linewidth = .4)+
scale_y_continuous(name = "Reward size")+
scale_x_continuous(name = "Trial")+
scale_color_manual(labels = c("1", "2", "3", "4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Bandit")
# add choices/stay vs. switch
initf2 <- function() {
list(mu_beta = 0.5, mu_alpha = 2.5, mu_tau = 0.3, mu_vcoeff = 1, mu_vmax = 2,5,
beta = rep(0.5, n_subs), alpha = rep(2.5, n_subs), tau = rep(0.3, n_subs), vcoeff = rep(1, n_subs), vmax = rep(2.5, n_subs))
}
init2()
initf2()
n_subs = 10
initf2()
x initf2()
x = initf2()
x
load("C:/Users/deniz/sciebo - Tuzsus, Deniz (dtuzsus1@uni-koeln.de)@uni-koeln.sciebo.de/Deniz/Lehre/Masterarbeiten/Henrike Flimm/rnn_data_nh_factors.Rdata")
knitr::opts_chunk$set(echo = TRUE)
options(mc.cores = parallel::detectCores())
# necessary packages
library(dplyr)
library(rstatix)
library(afex)
library(emmeans)
library(tidyverse)
library(ggnewscale)
library(rstan)
library(gdata)
library(bayesplot)
library(ggplot2)
library(gghalves)
library(gridExtra)
library(data.table)
library(loo)
# trial index
rnn_data <- rnn_data %>% group_by(id, n_hidden) %>% mutate(trial = seq_len(n()))
# random walk variable == run
# mean accuracy (1 = option with the highest reward chosen, 0 = other option chosen)
# grouped by RNN, random walk and number of hidden units
rnn_data %>%
group_by(id, n_hidden, run) %>%
get_summary_stats(accuracy, type = "mean_sd")
# cumulative regret (sum of the difference between maximum return possible and obtained return across trials)
# obtained return (mean centered --> different means per task environment, n = 300 each)
rnn_data %>%
group_by(id, n_hidden, run) %>%
summarize(sum_reward = sum(reward), .groups = "drop")
# calculate not centered return
rnn_data <- rnn_data %>%
mutate(diff_cen = case_when(choice == 0 ~ (p_rew_1-reward), choice == 1 ~ (p_rew_2-reward), choice == 2 ~ (p_rew_3-reward), choice == 3 ~ (p_rew_4-reward)))
rnn_data$reward_notcen <- rnn_data$reward + rnn_data$diff_cen
# maximum return possible
# not mean centered
rnn_data$max_rew <- pmax(rnn_data$p_rew_1, rnn_data$p_rew_2, rnn_data$p_rew_3, rnn_data$p_rew_4)
rnn_data %>%
group_by(id, n_hidden, run) %>%
summarize(sum_reward_max = sum(max_rew), .groups = "drop")
# result
rnn_data$rew_loss <- rnn_data$max_rew - rnn_data$reward_notcen
cum_regret <- rnn_data %>%
group_by(id, n_hidden, run) %>%
summarize(cum_regret = sum(rew_loss), .groups = "drop")
cum_regret
# clear all objects in environment
rm(list = ls(all.names = TRUE))
# set working dir to dir where R-file resides
setwd(file.path(dirname(rstudioapi::getSourceEditorContext()$path)))
# clear all objects in environment
rm(list = ls(all.names = TRUE))
# set working dir to dir where R-file resides
setwd(file.path(dirname(rstudioapi::getSourceEditorContext()$path)))
# load data
load("../data/rnn_raw_data/rnn_data_nh_factors_80s_trained.Rdata")
colnames(rnn_data)
# subset a run
subset(rnn_data, id = 0 & run==0)
# subset a run
subset(rnn_data, id = 0 & run==0 & n_hidden = 48)
# subset a run
subset(rnn_data, id = 0 & run==0 & n_hidden == 48)
# subset a run
df = subset(rnn_data, id = 0 & run==0 & n_hidden == 48)
df
dim(df)
# subset a run
df = subset(rnn_data, id =0 0 & run==0 & n_hidden == 48)
# subset a run
df = subset(rnn_data, id == 0 & run==0 & n_hidden == 48)
dim(df)
# load data
load("../data/rnn_raw_data/rnn_data_nh_factors_80s_trained.Rdata")
library(dplyr)
# load libraries
library(ggplot2)
library(dplyr)
rnn_run_long <- pivot_longer(data = my_runs_df, cols = c("p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4"), names_to = "bandit_rew")
# load data
load("../data/rnn_raw_data/rnn_data_nh_factors_80s_trained.Rdata")
library(tidyverse)
library(tidyverse)
rnn_run_long <- pivot_longer(data = my_runs_df, cols = c("p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4"), names_to = "bandit_rew")
# subset my run
my_runs_df = subset(rnn_data, id == 0 & run==0 & n_hidden == 48)
rnn_run_long <- pivot_longer(data = my_runs_df, cols = c("p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4"), names_to = "bandit_rew")
my_runs_df
rnn_run_long <- pivot_longer(data = my_runs_df, cols = c("p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4"), names_to = "bandit_rew")
colnames(my_runs_df)
my_runs_df[,4]
colnames(my_runs_df)[4]
colnames(my_runs_df)[209]
rnn_run_long <- pivot_longer(data = my_runs_df, cols = c("p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4"), names_to = "bandit_rew")
colnames(my_runs_df)[4]
colnames(my_runs_df)[209]
my_runs_df[,4]
my_runs_df[4,4]
my_runs_df[209,4]
# subset my run
my_runs_df = subset(rnn_data, id == 0 & run==0 & n_hidden == 48)[c("id", "n_hidden", "run", "trial2", "p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4", "choice", "is_switch")]
my_runs_df
my_runs_df[,c("id", "n_hidden", "run", "trial2", "p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4", "choice", "is_switch")]
colnames(my_runs_df)
my_runs_df[,c("id", "n_hidden", "run", "p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4", "choice", "is_switch")]
my_runs_df = my_runs_df[,c("id", "n_hidden", "run", "p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4", "choice", "is_switch")]
rnn_run_long <- pivot_longer(data = my_runs_df, cols = c("p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4"), names_to = "bandit_rew")
rnn_run_long
rnn_run_long
rnn_run_long <- rnn_run_long %>% mutate(choice_y = case_when(choice == 0 ~ 97, choice == 1 ~ 98, choice == 2 ~ 99, TRUE ~ 100))
rnn_run_long$choice_c <- as.factor(rnn_run_long$choice)
rnn_run_long$value
rnn_run_long$value * 100
rnn_run_long$rewards = rnn_run_long$value * 100
dim(rnn_run_long)
rnn_run_long
seq_along(300)
rep(1:300, each = 4)
rnn_run_long&trial2 = rep(1:300, each = 4)
rnn_run_long$trial2 = rep(1:300, each = 4)
rnn_run_long
### Henrikes Plot
ggplot(data = rnn_run_long, aes(x = trial2, y = reward, colour = bandit_rew))+
geom_line()+
scale_y_continuous(name = "Reward")+
scale_x_continuous(name = "Trial")+
scale_color_manual(labels = c("b1", "b2", "b3", "b4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Bandit")+
new_scale_colour()+
geom_point(aes(x = trial2, y = choice_y, colour = choice_c), size = .8)+
scale_color_manual(labels = c("a1", "a2", "a3", "a4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Choice", guide = "none")+
ggtitle(label = "RNN-ID 0, 48 hidden units, run 14", subtitle = "62 % Optimal, 12 % Switch")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"), plot.subtitle = element_text(hjust = 0.5))
??new_scale_color
??new_scale_colour
library(ggnewscale)
ggplot(data = rnn_run_long, aes(x = trial2, y = reward, colour = bandit_rew))+
geom_line()+
scale_y_continuous(name = "Reward")+
scale_x_continuous(name = "Trial")+
scale_color_manual(labels = c("b1", "b2", "b3", "b4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Bandit")+
new_scale_colour()+
geom_point(aes(x = trial2, y = choice_y, colour = choice_c), size = .8)+
scale_color_manual(labels = c("a1", "a2", "a3", "a4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Choice", guide = "none")+
ggtitle(label = "RNN-ID 0, 48 hidden units, run 14", subtitle = "62 % Optimal, 12 % Switch")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"), plot.subtitle = element_text(hjust = 0.5))
rnn_run_long$reward = rnn_run_long$value * 100
### Henrikes Plot
ggplot(data = rnn_run_long, aes(x = trial2, y = reward, colour = bandit_rew))+
geom_line()+
scale_y_continuous(name = "Reward")+
scale_x_continuous(name = "Trial")+
scale_color_manual(labels = c("b1", "b2", "b3", "b4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Bandit")+
new_scale_colour()+
geom_point(aes(x = trial2, y = choice_y, colour = choice_c), size = .8)+
scale_color_manual(labels = c("a1", "a2", "a3", "a4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Choice", guide = "none")+
ggtitle(label = "RNN-ID 0, 48 hidden units, run 14", subtitle = "62 % Optimal, 12 % Switch")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"), plot.subtitle = element_text(hjust = 0.5))
### Henrikes Plot
ggplot(data = rnn_run_long, aes(x = trial2, y = reward, colour = bandit_rew))+
geom_line()+
scale_y_continuous(name = "Reward")+
scale_x_continuous(name = "Trial")+
scale_color_manual(labels = c("b1", "b2", "b3", "b4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Bandit")+
new_scale_colour()+
# geom_point(aes(x = trial2, y = choice_y, colour = choice_c), size = .8)+
scale_color_manual(labels = c("a1", "a2", "a3", "a4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Choice", guide = "none")+
ggtitle(label = "RNN-ID 0, 48 hidden units, run 14", subtitle = "62 % Optimal, 12 % Switch")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"), plot.subtitle = element_text(hjust = 0.5))
### Henrikes Plot
ggplot(data = rnn_run_long, aes(x = trial2, y = reward, colour = bandit_rew))+
geom_line()+
scale_y_continuous(name = "Reward")+
scale_x_continuous(name = "Trial")+
scale_color_manual(labels = c("b1", "b2", "b3", "b4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Bandit")+
new_scale_colour()+
# geom_point(aes(x = trial2, y = choice_y, colour = choice_c), size = .8)+
scale_color_manual(labels = c("a1", "a2", "a3", "a4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Choice", guide = "none")+
#ggtitle(label = "RNN-ID 0, 48 hidden units, run 14", subtitle = "62 % Optimal, 12 % Switch")+
theme(plot.title = element_text(hjust = 0.5, face = "bold"), plot.subtitle = element_text(hjust = 0.5))
### Henrikes Plot
ggplot(data = rnn_run_long, aes(x = trial2, y = reward, colour = bandit_rew))+
geom_line()+
scale_y_continuous(name = "Reward")+
scale_x_continuous(name = "Trial")+
scale_color_manual(labels = c("b1", "b2", "b3", "b4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Bandit")+
new_scale_colour()+
# geom_point(aes(x = trial2, y = choice_y, colour = choice_c), size = .8)+
scale_color_manual(labels = c("a1", "a2", "a3", "a4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Choice", guide = "none")+
ggtitle(label = 'Run = 0')+
theme(plot.title = element_text(hjust = 0.5, face = "bold"), plot.subtitle = element_text(hjust = 0.5))
### Henrikes Plot
plot_function <- function(df, my_title = 'Run = 0', my_subtitle = ''){
p <- ggplot(data = df, aes(x = trial2, y = reward, colour = bandit_rew))+
geom_line()+
scale_y_continuous(name = "Reward")+
scale_x_continuous(name = "Trial")+
scale_color_manual(labels = c("b1", "b2", "b3", "b4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Bandit")+
new_scale_colour()+
# geom_point(aes(x = trial2, y = choice_y, colour = choice_c), size = .8)+
scale_color_manual(labels = c("a1", "a2", "a3", "a4"), values = c("steelblue1", "limegreen", "tan1", "violetred1"), name = "Choice", guide = "none")+
ggtitle(label = my_title, subtitle = my_subtitle)+
theme(plot.title = element_text(hjust = 0.5, face = "bold"), plot.subtitle = element_text(hjust = 0.5))
return(p)
}
plot_function(rnn_run_long)
### load daw run
load("../data/rnn_raw_data/rnn_data_nh_96_daw_walks.Rdata")
### load daw run
load("../data/rnn_raw_data/rnn_data_nh_96_daw_walks.Rdata")
### load daw run
load("../data/rnn_raw_data/rnn_data_nh_192_daw_walks.Rdata")
colnames(rnn_data)
View(my_runs_df)
View(df)
### load daw run
load("../data/rnn_raw_data/rnn_data_nh_192_daw_walks.Rdata")
View(rnn_data)
# subset my run
daw_df = subset(rnn_data, id == 0 & run==0 & n_hidden == 48)
# subset my run
daw_df = subset(rnn_data, id == 0 & n_hidden == 48)
daw_df
# subset my run
daw_df = subset(rnn_data, id == 0 & n_hidden == 48)
daw_df
daw_df$p_rew_1
colnames(daw_df)
daw_df
rnn_data
# subset my run
daw_df = subset(rnn_data, id == 0 & n_hidden == 192)
daw_df = my_runs_df[,c("id", "n_hidden", "run", "p_rew_1", "p_rew_2", "p_rew_3", "p_rew_4", "choice", "is_switch")]
daw_df
daw_df$p_rew_1
# create run variable
daw_df$p_rew_1
